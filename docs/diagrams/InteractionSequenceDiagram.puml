' @startuml
' !include style.puml
' skinparam ArrowFontStyle plain

' box Logic LOGIC_COLOR_T1
' participant ":LogicManager" as LogicManager LOGIC_COLOR
' participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
' participant ":InteractionCommandParser" as InteractionCommandParser LOGIC_COLOR
' participant "d:InteractionCommand" as InteractionCommand LOGIC_COLOR
' participant ":CommandResult" as CommandResult LOGIC_COLOR
' end box

' box Model MODEL_COLOR_T1
' participant ":Model" as Model MODEL_COLOR
' end box

' [-> LogicManager : execute("Interaction 1")
' activate LogicManager

' LogicManager -> AddressBookParser : parseCommand("Interaction 1")
' activate AddressBookParser

' create InteractionCommandParser
' AddressBookParser -> InteractionCommandParser
' activate InteractionCommandParser

' InteractionCommandParser --> AddressBookParser
' deactivate InteractionCommandParser

' AddressBookParser -> InteractionCommandParser : parse("1")
' activate InteractionCommandParser

' create InteractionCommand
' InteractionCommandParser -> InteractionCommand
' activate InteractionCommand

' InteractionCommand --> InteractionCommandParser : d
' deactivate InteractionCommand

' InteractionCommandParser --> AddressBookParser : d
' deactivate InteractionCommandParser
' 'Hidden arrow to position the destroy marker below the end of the activation bar.
' InteractionCommandParser -[hidden]-> AddressBookParser
' destroy InteractionCommandParser

' AddressBookParser --> LogicManager : d
' deactivate AddressBookParser

' LogicManager -> InteractionCommand : execute()
' activate InteractionCommand

' InteractionCommand -> Model : InteractionPerson(1)
' activate Model

' Model --> InteractionCommand
' deactivate Model

' create CommandResult
' InteractionCommand -> CommandResult
' activate CommandResult

' CommandResult --> InteractionCommand
' deactivate CommandResult

' InteractionCommand --> LogicManager : result
' deactivate InteractionCommand

' [<--LogicManager
' deactivate LogicManager
' @enduml
@startuml
participant "Command Parser" as Parser
participant "Interaction Command" as Command
participant Person
participant Interaction
participant "PersonCard UI" as UI

User -> Parser : interaction command
activate Parser
Parser -> Command : create()
activate Command
Command -> Person : addInteraction()
activate Person
Person -> Interaction : new()
activate Interaction
Interaction --> Person : return interaction
deactivate Interaction
Person --> Command : return success
deactivate Person
Command --> Parser : return success
deactivate Command
Parser --> User : return success
deactivate Parser
User -> UI : update()
activate UI
UI --> User : display interaction
deactivate UI
@enduml
